# 2 Создать список, состоящий из кубов нечётных чисел от 1 до 1000:
# a. Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
# Например, число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – #
# делится нацело на 7. Внимание: использовать только арифметические операции!
# b. К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка,
# сумма цифр которых делится нацело на 7.
# c. * Решить задачу под пунктом b, не создавая новый список.

# Ход мысли с промежуточными значениями и выводами находится в "For_Test.py", могут быть ошибочные комментарии в принтах

# Создаём переменные, для работы первой части программы:
cube_list = []
sum_list = []
seven_list = []
sum_seven = 0

# С помощью цикла возведём в куб числа от 1 до 1000, с шагом в 2, так как нас интересуют только нечётеые числа
for i in range(1, 1000, 2):
    cube_list.append(i ** 3)

# Пройдём циклом по нашему списку и вычислим сумму цирф в каждом элементе#
# (функции взял из примера решения подобной задачи в Интернете, так как мой цикл не удался)
for ind in range(len(cube_list)):
    sum_list.append(sum(map(int, str(cube_list[ind]))))  # map - указывает, что обработать нужно весь список, sum - сумма элемента списка
# Прям в этом же цикле добавим условие, что сумма цифр должна быть кратна 7 и запишем верные значения в "seven_list"
    if sum_list[ind] % 7 == 0:  # проверяем, что сумма цифр элемента списка делится нацело на 7
        seven_list.append(cube_list[ind])  # записываем в список "seven_list" значение числа из "cube_list", которые удовлетворяют условию

# Циклом посчитаем сумму всех элементов списка, в которых сумма всех цифр кратна 7
for x in seven_list:
    sum_seven = sum_seven + x

# Выводим результат сложения на экран
print('Сумма всех элементов, сумма цифр которых кратна 7: ', sum_seven)


# Создаём переменные, для работы второй части программы:
cube_plus_seventeen = []
seventeen_list = []
sum_seventeen_list = []
sum_seventeen = 0

# Прибавляем по 17 к каждому элементу списка кубов чисел
for numbers in range(len(cube_list)):
    cube_plus_seventeen.append(cube_list[numbers] + 17)

# Так же циклом прогоняем по этому списку и вычисляем сумму цирф в каждом элементе
for ind in range(len(cube_plus_seventeen)):
    sum_seventeen_list.append(sum(map(int, str(cube_plus_seventeen[ind]))))
# Прям в этом же цикле добавим условие, что сумма цифр должна быть кратна 7 и запишем верные значения в "seventeen_list"
    if sum_seventeen_list[ind] % 7 == 0:  # проверяем, что сумма цифр элемента списка делится нацело на 7
        seventeen_list.append(cube_plus_seventeen[ind])

for y in seventeen_list:  # считаем сумму всех элементов списка, в которых сумма всех цифр кратна 7
    sum_seventeen = sum_seventeen + y

# Выводим результат сложения на экран
print('Сумма всех элементов, увеличенных на 17, сумма цифр которых кратна 7: ', sum_seventeen)
